üß† 1Ô∏è‚É£ Overview
When you install OpenShift Container Platform (OCP) or OKD (community edition) on virtual machines, you‚Äôre essentially simulating a bare-metal setup ‚Äî except each node runs inside a hypervisor like:
KVM / libvirt (using Virtual Machine Manager / virt-manager)
VMware vSphere / ESXi
oVirt / Red Hat Virtualization (RHV)
VirtualBox
Proxmox

‚úÖ This is one of the most flexible setups ‚Äî easy to snapshot, scale, or redeploy quickly.

‚öôÔ∏è 2Ô∏è‚É£ Choose Your Installation Type
| Type                                           | Description                                                                                                                      | Recommended Use                                         |
| ---------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------- |
| **IPI (Installer Provisioned Infrastructure)** | The installer automatically creates VMs, networks, load balancers, and DNS records (supported on some hypervisors like vSphere). | Cloud or vSphere-based automated setup                  |
| **UPI (User Provisioned Infrastructure)**      | You manually create VMs, configure DNS and networking, and the installer only handles cluster bootstrapping.                     | KVM, oVirt, VirtualBox, Proxmox, or any manual VM setup |
For most local or KVM labs, UPI is preferred and gives you full control.

üñ•Ô∏è 3Ô∏è‚É£ Virtual Machine Configuration
| Role                   | vCPU | RAM   | Disk   | Count    | OS            |
| ---------------------- | ---- | ----- | ------ | -------- | ------------- |
| Bootstrap              | 4    | 16 GB | 120 GB | 1        | RHCOS         |
| Master (Control Plane) | 4+   | 16 GB | 120 GB | 3        | RHCOS         |
| Worker                 | 2+   | 8+ GB | 120 GB | 2        | RHCOS or RHEL |
| Infra (optional)       | 4+   | 16 GB | 120 GB | Optional | RHCOS         |
üí° Minimum cluster = 3 masters + 2 workers.
Compact = 3 combined master/worker nodes.
Single-node = 1 VM for testing (SNO).

üåê 4Ô∏è‚É£ Network Design (Example)
| Hostname                  | IP Address               | Purpose            |
| ------------------------- | ------------------------ | ------------------ |
| bootstrap.ocp.example.com | 192.168.122.10           | Bootstrap node     |
| master-1.ocp.example.com  | 192.168.122.11           | Control plane      |
| master-2.ocp.example.com  | 192.168.122.12           | Control plane      |
| master-3.ocp.example.com  | 192.168.122.13           | Control plane      |
| worker-1.ocp.example.com  | 192.168.122.14           | Worker node        |
| worker-2.ocp.example.com  | 192.168.122.15           | Worker node        |
| api.ocp.example.com       | 192.168.122.100 (LB VIP) | API endpoint       |
| api-int.ocp.example.com   | 192.168.122.101 (LB VIP) | Internal API       |
| *.apps.ocp.example.com    | 192.168.122.102 (LB VIP) | Application routes |

üß± 5Ô∏è‚É£ Infrastructure Components
üî∏ DNS Server (e.g. dnsmasq or BIND)

Create forward and reverse records:
api.ocp.example.com       A 192.168.122.100
api-int.ocp.example.com   A 192.168.122.101
*.apps.ocp.example.com    A 192.168.122.102
master-1.ocp.example.com  A 192.168.122.11
master-2.ocp.example.com  A 192.168.122.12

üî∏ Load Balancer (e.g. HAProxy)
# /etc/haproxy/haproxy.cfg
frontend api-server
    bind *:6443
    default_backend masters

backend masters
    balance roundrobin
    server master-1 192.168.122.11:6443 check
    server master-2 192.168.122.12:6443 check
    server master-3 192.168.122.13:6443 check

frontend ingress
    bind *:80
    bind *:443
    default_backend workers

backend workers
    balance roundrobin
    server worker-1 192.168.122.14:80 check
    server worker-2 192.168.122.15:80 check

üß∞ 6Ô∏è‚É£ Prepare the Required Files

üìÅ Download OpenShift Installer & CLI
curl -O https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-install-linux.tar.gz
curl -O https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-client-linux.tar.gz
tar -xvf openshift-install-linux.tar.gz
tar -xvf openshift-client-linux.tar.gz
mv oc kubectl openshift-install /usr/local/bin/

üîë Create SSH Key
ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ''

üîê Get Red Hat Pull Secret
Download from Red Hat OpenShift Cluster Manager
.

üßæ 7Ô∏è‚É£ Create Install Configuration
mkdir ~/ocp-install && cd ~/ocp-install
openshift-install create install-config --dir=./

Fill in prompts:
? Platform: none
? Base Domain: example.com
? Cluster Name: ocp
? Pull Secret: (paste from Red Hat)
? SSH Public Key: (paste from ~/.ssh/id_rsa.pub)

This generates:
install-config.yaml
metadata.json

üèóÔ∏è 8Ô∏è‚É£ Create Ignition Files
openshift-install create manifests --dir=./
openshift-install create ignition-configs --dir=./
You‚Äôll now have:
bootstrap.ign
master.ign
worker.ign

üß© 9Ô∏è‚É£ Create VMs
Create using virt-manager, virt-install, or your hypervisor UI.
Example (virt-install):
virt-install --name bootstrap --vcpus 4 --memory 16384 \
  --disk size=120 --os-variant=rhcos9 --network bridge=br0 \
  --location rhcos-live.x86_64.iso \
  --extra-args="coreos.inst.install_dev=/dev/vda coreos.inst.image_url=http://192.168.122.1:8080/rhcos.raw.gz coreos.inst.ignition_url=http://192.168.122.1:8080/bootstrap.ign"
Repeat for masters/workers with their respective .ign files.

üí° Serve the .ign files and RHCOS image via a simple web server:
python3 -m http.server 8080

üîÑ 10Ô∏è‚É£ Bootstrap and Monitor Installation
After all nodes are booted:
openshift-install --dir=./ wait-for bootstrap-complete --log-level=info
Once complete:
openshift-install --dir=./ wait-for install-complete

üåç 11Ô∏è‚É£ Access the Cluster
Get the credentials:
cat ./auth/kubeconfig
cat ./auth/kubeadmin-password

Access web console:
https://console-openshift-console.apps.ocp.example.com

Login:
Username: kubeadmin
Password: (from kubeadmin-password)

üßÆ 12Ô∏è‚É£ Verify Installation
Check cluster status:
oc login -u kubeadmin -p $(cat ./auth/kubeadmin-password) https://api.ocp.example.com:6443
oc get nodes
oc get pods -A
oc get co

üß† 14Ô∏è‚É£ Key Differences from Bare Metal
| Aspect       | Bare Metal        | Virtual Machines                       |
| ------------ | ----------------- | -------------------------------------- |
| Hardware     | Physical servers  | Virtualized environment                |
| Networking   | Physical switches | Virtual bridges (libvirt, vSwitch)     |
| Storage      | Disks, SAN        | Virtual disks (qcow2/vmdk)             |
| Provisioning | PXE or manual     | Hypervisor console or cloud-init       |
| Performance  | High              | Slightly lower (depends on host)       |
| Flexibility  | Low               | High (easy to clone, snapshot, resize) |

